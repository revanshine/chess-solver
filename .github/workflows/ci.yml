# name: CI

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.11", "3.12"]

#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test_db
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432

#       redis:
#         image: redis:7
#         options: >-
#           --health-cmd "redis-cli ping"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 6379:6379

#     steps:
#     - uses: actions/checkout@v4

#     - name: Install UV
#       uses: astral-sh/setup-uv@v3
#       with:
#         enable-cache: true

#     - name: Set up Python ${{ matrix.python-version }}
#       run: uv python install ${{ matrix.python-version }}

#     - name: Install dependencies
#       run: uv sync --all-extras --dev

#     - name: Run ruff linter
#       run: uv run ruff check .

#     - name: Run ruff formatter
#       run: uv run ruff format --check .

#     - name: Run mypy
#       run: uv run mypy src/

#     - name: Run tests
#       run: uv run pytest --cov=src/codex_template --cov-report=xml
#       env:
#         DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
#         REDIS_URL: redis://localhost:6379/0

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         file: ./coverage.xml

#   security:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - name: Install UV
#       uses: astral-sh/setup-uv@v3

#     - name: Install dependencies
#       run: uv sync --dev

#     - name: Run bandit security linter
#       run: uv run bandit -r src/

#   build:
#     runs-on: ubuntu-latest
#     needs: [test, security]
#     if: github.ref == 'refs/heads/main'

#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v3
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push Docker image
#       uses: docker/build-push-action@v5
#       with:
#         context: .
#         push: true
#         tags: ${{ secrets.DOCKER_USERNAME }}/codex-template:latest
#         cache-from: type=gha
#         cache-to: type=gha,mode=max
